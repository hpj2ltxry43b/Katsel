#pragma once

namespace ASTNS
{
// ASTFORWDECL BEGIN

// The following code was autogenerated - see the utils/ directory
class AST;
class ArgsB;
class DeclB;
class ExprB;
class PListB;
class StmtB;
class TypeB;
class VStmtIB;
class AdditionExpr;
class Args;
class AssignmentExpr;
class BinandExpr;
class BinnotExpr;
class BinorExpr;
class BitandExpr;
class BitorExpr;
class BitshiftExpr;
class BitxorExpr;
class Block;
class BuiltinType;
class CallExpr;
class CompeqExpr;
class ComplgtExpr;
class Decl;
class Decls;
class EmptyStmt;
class Expr;
class ExprStmt;
class Function;
class MultExpr;
class ParamList;
class PrimaryExpr;
class RetStmt;
class Stmt;
class Stmts;
class TernaryExpr;
class Type;
class UnaryExpr;
class VarStmt;
class VarStmtItem;
class VarStmtItems;
// This code was autogenerated - see the utils/ directory

// ASTFORWDECL END
}

// VISITCLASSES START

// The following code was autogenerated - see the utils/ directory
class ArgsBVisitor
{
public:
    virtual void visitArgs(ASTNS::Args *ast) = 0;
};
class DeclBVisitor
{
public:
    virtual void visitDecl(ASTNS::Decl *ast) = 0;
    virtual void visitDecls(ASTNS::Decls *ast) = 0;
    virtual void visitFunction(ASTNS::Function *ast) = 0;
};
class ExprBVisitor
{
public:
    virtual void visitAdditionExpr(ASTNS::AdditionExpr *ast) = 0;
    virtual void visitAssignmentExpr(ASTNS::AssignmentExpr *ast) = 0;
    virtual void visitBinandExpr(ASTNS::BinandExpr *ast) = 0;
    virtual void visitBinnotExpr(ASTNS::BinnotExpr *ast) = 0;
    virtual void visitBinorExpr(ASTNS::BinorExpr *ast) = 0;
    virtual void visitBitandExpr(ASTNS::BitandExpr *ast) = 0;
    virtual void visitBitorExpr(ASTNS::BitorExpr *ast) = 0;
    virtual void visitBitshiftExpr(ASTNS::BitshiftExpr *ast) = 0;
    virtual void visitBitxorExpr(ASTNS::BitxorExpr *ast) = 0;
    virtual void visitCallExpr(ASTNS::CallExpr *ast) = 0;
    virtual void visitCompeqExpr(ASTNS::CompeqExpr *ast) = 0;
    virtual void visitComplgtExpr(ASTNS::ComplgtExpr *ast) = 0;
    virtual void visitExpr(ASTNS::Expr *ast) = 0;
    virtual void visitMultExpr(ASTNS::MultExpr *ast) = 0;
    virtual void visitPrimaryExpr(ASTNS::PrimaryExpr *ast) = 0;
    virtual void visitTernaryExpr(ASTNS::TernaryExpr *ast) = 0;
    virtual void visitUnaryExpr(ASTNS::UnaryExpr *ast) = 0;
};
class PListBVisitor
{
public:
    virtual void visitParamList(ASTNS::ParamList *ast) = 0;
};
class StmtBVisitor
{
public:
    virtual void visitBlock(ASTNS::Block *ast) = 0;
    virtual void visitEmptyStmt(ASTNS::EmptyStmt *ast) = 0;
    virtual void visitExprStmt(ASTNS::ExprStmt *ast) = 0;
    virtual void visitRetStmt(ASTNS::RetStmt *ast) = 0;
    virtual void visitStmt(ASTNS::Stmt *ast) = 0;
    virtual void visitStmts(ASTNS::Stmts *ast) = 0;
    virtual void visitVarStmt(ASTNS::VarStmt *ast) = 0;
};
class TypeBVisitor
{
public:
    virtual void visitBuiltinType(ASTNS::BuiltinType *ast) = 0;
    virtual void visitType(ASTNS::Type *ast) = 0;
};
class VStmtIBVisitor
{
public:
    virtual void visitVarStmtItem(ASTNS::VarStmtItem *ast) = 0;
    virtual void visitVarStmtItems(ASTNS::VarStmtItems *ast) = 0;
};
// This code was autogenerated - see the utils/ directory

// VISITCLASSES END
