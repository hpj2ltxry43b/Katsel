#pragma once

#include "ast/astfwd.h"

namespace ASTNS {
// ASTVISITH START
// The following code was autogenerated - see the utils/ directory
    class CUBVisitor {
    public:
        virtual ~CUBVisitor() {}
        virtual void visitCU(ASTNS::CU &ast) = 0;
    };
    class DeclVisitor {
    public:
        virtual ~DeclVisitor() {}
        virtual void visitImplicitDecl(ASTNS::ImplicitDecl &ast) = 0;
        virtual void visitImplDecl(ASTNS::ImplDecl &ast) = 0;
        virtual void visitFunctionDecl(ASTNS::FunctionDecl &ast) = 0;
    };
    class ImplMemberVisitor {
    public:
        virtual ~ImplMemberVisitor() {}
        virtual void visitFunctionImplMember(ASTNS::FunctionImplMember &ast) = 0;
    };
    class StmtVisitor {
    public:
        virtual ~StmtVisitor() {}
        virtual void visitVarStmt(ASTNS::VarStmt &ast) = 0;
        virtual void visitExprStmt(ASTNS::ExprStmt &ast) = 0;
        virtual void visitRetStmt(ASTNS::RetStmt &ast) = 0;
    };
    class ExprVisitor {
    public:
        virtual ~ExprVisitor() {}
        virtual void visitBlock(ASTNS::Block &ast) = 0;
        virtual void visitIfExpr(ASTNS::IfExpr &ast) = 0;
        virtual void visitWhileExpr(ASTNS::WhileExpr &ast) = 0;
        virtual void visitAssignmentExpr(ASTNS::AssignmentExpr &ast) = 0;
        virtual void visitShortCircuitExpr(ASTNS::ShortCircuitExpr &ast) = 0;
        virtual void visitBinaryExpr(ASTNS::BinaryExpr &ast) = 0;
        virtual void visitCastExpr(ASTNS::CastExpr &ast) = 0;
        virtual void visitUnaryExpr(ASTNS::UnaryExpr &ast) = 0;
        virtual void visitAddrofExpr(ASTNS::AddrofExpr &ast) = 0;
        virtual void visitDerefExpr(ASTNS::DerefExpr &ast) = 0;
        virtual void visitCallExpr(ASTNS::CallExpr &ast) = 0;
        virtual void visitFieldAccessExpr(ASTNS::FieldAccessExpr &ast) = 0;
        virtual void visitMethodCallExpr(ASTNS::MethodCallExpr &ast) = 0;
        virtual void visitPrimaryExpr(ASTNS::PrimaryExpr &ast) = 0;
        virtual void visitPathExpr(ASTNS::PathExpr &ast) = 0;
    };
    class TypeVisitor {
    public:
        virtual ~TypeVisitor() {}
        virtual void visitPathType(ASTNS::PathType &ast) = 0;
        virtual void visitPointerType(ASTNS::PointerType &ast) = 0;
        virtual void visitThisType(ASTNS::ThisType &ast) = 0;
    };
    class ArgBVisitor {
    public:
        virtual ~ArgBVisitor() {}
        virtual void visitArg(ASTNS::Arg &ast) = 0;
    };
    class ParamBVisitor {
    public:
        virtual ~ParamBVisitor() {}
        virtual void visitParam(ASTNS::Param &ast) = 0;
        virtual void visitThisParam(ASTNS::ThisParam &ast) = 0;
    };
    class VStmtIBVisitor {
    public:
        virtual ~VStmtIBVisitor() {}
        virtual void visitVarStmtItem(ASTNS::VarStmtItem &ast) = 0;
    };
    class PathBVisitor {
    public:
        virtual ~PathBVisitor() {}
        virtual void visitPath(ASTNS::Path &ast) = 0;
    };
    class ListBVisitor {
    public:
        virtual ~ListBVisitor() {}
        virtual void visitDeclList(ASTNS::DeclList &ast) = 0;
        virtual void visitStmtList(ASTNS::StmtList &ast) = 0;
        virtual void visitParamList(ASTNS::ParamList &ast) = 0;
        virtual void visitArgList(ASTNS::ArgList &ast) = 0;
        virtual void visitVarStmtItemList(ASTNS::VarStmtItemList &ast) = 0;
        virtual void visitImplMemberList(ASTNS::ImplMemberList &ast) = 0;
    };
    class PureLocationBVisitor {
    public:
        virtual ~PureLocationBVisitor() {}
        virtual void visitPureLocation(ASTNS::PureLocation &ast) = 0;
    };
// This code was autogenerated - see the utils/ directory
// ASTVISITH END
}
