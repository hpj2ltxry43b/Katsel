#pragma once

#include "lex/token.h"

// ERRH START

// The following code was autogenerated - see the utils/ directory
// Errors E0000-E0100: lexing errors
// Errors E0100-E0200: parsing errors

// E0000 - unexpected-char
#define ERR_UNEXPECTED_CHAR E0000
void E0000(Token const &tok);

// E0001 - unterm-charlit
#define ERR_UNTERM_CHARLIT E0001
void E0001(Token const &tok);

// E0002 - unterm-strlit
#define ERR_UNTERM_STRLIT E0002
void E0002(Token const &tok);

// E0003 - invalid-intlit-base
#define ERR_INVALID_INTLIT_BASE E0003
void E0003(Token const &tok);

// E0004 - nondecimal-floatlit
#define ERR_NONDECIMAL_FLOATLIT E0004
void E0004(Token const &tok);

// E0100 - unrecoverable-invalid-syntax-while
#define ERR_UNRECOVERABLE_INVALID_SYNTAX_WHILE E0100
void E0100(std::string const &justparsed, std::string const &expected, std::string const &whileparsing, Token const &lookahead, Token const &last);

// E0101 - unrecoverable-invalid-syntax
#define ERR_UNRECOVERABLE_INVALID_SYNTAX E0101
void E0101(std::string const &justparsed, std::string const &expected, Token const &lookahead, Token const &last);

// E0102 - simple-invalid-syntax-while
#define ERR_SIMPLE_INVALID_SYNTAX_WHILE E0102
void E0102(std::string const &justparsed, std::string const &expected, std::string const &whileparsing, Token const &lookahead, Token const &last);

// E0103 - simple-invalid-syntax
#define ERR_SIMPLE_INVALID_SYNTAX E0103
void E0103(std::string const &justparsed, std::string const &expected, Token const &lookahead, Token const &last);

// E0104 - panicking-invalid-syntax-while
#define ERR_PANICKING_INVALID_SYNTAX_WHILE E0104
void E0104(std::string const &justparsed, std::string const &expected, std::string const &whileparsing, Token const &lookahead, Token const &last);

// E0105 - panicking-invalid-syntax
#define ERR_PANICKING_INVALID_SYNTAX E0105
void E0105(std::string const &justparsed, std::string const &expected, Token const &lookahead, Token const &last);

// This code was autogenerated - see the utils/ directory

// ERRH END
