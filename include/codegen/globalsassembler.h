#pragma once

#include "visit/visitor.h"
#include "parse/ast.h"

#include "codegen/context.h"
#include "codegen/codegen.h"

class GlobalsAssembler : public ASTVisitor
{
public:
    GlobalsAssembler(CodeGenContext &con, CodeGen &codeGen);

    // GLOBALS METHODS START

// The following code was autogenerated - see the utils/ directory
void visitAdditionExpr(ASTNS::AdditionExpr *ast) override;
void visitArgs(ASTNS::Args *ast) override;
void visitAssignmentExpr(ASTNS::AssignmentExpr *ast) override;
void visitBinandExpr(ASTNS::BinandExpr *ast) override;
void visitBinnotExpr(ASTNS::BinnotExpr *ast) override;
void visitBinorExpr(ASTNS::BinorExpr *ast) override;
void visitBitandExpr(ASTNS::BitandExpr *ast) override;
void visitBitorExpr(ASTNS::BitorExpr *ast) override;
void visitBitshiftExpr(ASTNS::BitshiftExpr *ast) override;
void visitBitxorExpr(ASTNS::BitxorExpr *ast) override;
void visitBlock(ASTNS::Block *ast) override;
void visitCallExpr(ASTNS::CallExpr *ast) override;
void visitCompeqExpr(ASTNS::CompeqExpr *ast) override;
void visitComplgtExpr(ASTNS::ComplgtExpr *ast) override;
void visitDecl(ASTNS::Decl *ast) override;
void visitDecls(ASTNS::Decls *ast) override;
void visitEmptyStmt(ASTNS::EmptyStmt *ast) override;
void visitExprStmt(ASTNS::ExprStmt *ast) override;
void visitExpression(ASTNS::Expression *ast) override;
void visitFunction(ASTNS::Function *ast) override;
void visitMultExpr(ASTNS::MultExpr *ast) override;
void visitParamList(ASTNS::ParamList *ast) override;
void visitPrimaryExpr(ASTNS::PrimaryExpr *ast) override;
void visitRetStmt(ASTNS::RetStmt *ast) override;
void visitStmt(ASTNS::Stmt *ast) override;
void visitStmts(ASTNS::Stmts *ast) override;
void visitTernaryExpr(ASTNS::TernaryExpr *ast) override;
void visitType(ASTNS::Type *ast) override;
void visitUnaryExpr(ASTNS::UnaryExpr *ast) override;
void visitVarStmt(ASTNS::VarStmt *ast) override;
void visitVarStmtItem(ASTNS::VarStmtItem *ast) override;
void visitVarStmtItems(ASTNS::VarStmtItems *ast) override;
// This code was autogenerated - see the utils/ directory

    // GLOBALS METHODS END
    
private:
    CodeGenContext &context;
    CodeGen &codeGen;
};
