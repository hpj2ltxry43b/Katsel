#pragma once

#include "visit/visitor.h"
#include "parse/ast.h"

#include "codegen/context.h"
#include "value/value.h"
#include "typing/type.h"

#include "llvm/IR/Type.h"

#define CG_RETURNNULL() do \
    { \
        exprRetVal = Value(); \
        typeRetVal = nullptr; \
        return; \
    } while (false)

class CodeGen : public ASTVisitor
{
public:
    CodeGen(CodeGenContext &context);

    // CODEGEN METHODS START

// The following code was autogenerated - see the utils/ directory
void visitAdd(ASTNS::Add *ast) override;
void visitMult(ASTNS::Mult *ast) override;
void visitNew_expr(ASTNS::New_expr *ast) override;
void visitNew_stmt(ASTNS::New_stmt *ast) override;
void visitPrimary(ASTNS::Primary *ast) override;
void visitUnary(ASTNS::Unary *ast) override;
// This code was autogenerated - see the utils/ directory

    // CODEGEN METHODS END

    Value evalExpr(ASTNS::AST *a);
    Type* evalType(ASTNS::AST *a);

private:
    CodeGenContext &context;

    Value exprRetVal;
    Type *typeRetVal;
};

