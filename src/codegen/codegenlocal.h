#pragma once

#include "codegen/codegen.h"
#include "codegen/context.h"

#include "ast/ast.h"

#include "ir/value.h"
#include "ir/type.h"
#include "ir/instruction.h"

// TypeVisitor {{{1
class CodeGen::TypeVisitor : public ASTNS::TypeB::Visitor
{
public:
    TypeVisitor(CodeGen &cg);

    IR::Type* type(ASTNS::TypeB *ast);

private:
    // TYPEVISITOR METHODS START
// The following code was autogenerated - see the utils/ directory
void visitPrimitiveType(ASTNS::PrimitiveType *ast) override;
void visitType(ASTNS::Type *ast) override;
// This code was autogenerated - see the utils/ directory
    // TYPEVISITOR METHODS END

    IR::Type *ret;

    CodeGen &cg;
};

// ForwDecl {{{1
class CodeGen::ForwDecl : public ASTNS::DeclB::Visitor, public ASTNS::CUB::Visitor
{
public:
    ForwDecl(CodeGen &cg);

private:
    // FORWDECL METHODS START
// The following code was autogenerated - see the utils/ directory
void visitAnotherDecl(ASTNS::AnotherDecl *ast) override;
void visitCU(ASTNS::CU *ast) override;
void visitDecl(ASTNS::Decl *ast) override;
void visitDeclList(ASTNS::DeclList *ast) override;
void visitFunctionDecl(ASTNS::FunctionDecl *ast) override;
// This code was autogenerated - see the utils/ directory
    // FORWDECL METHODS END

    CodeGen &cg;
};

// Decls {{{1
// Function {{{2
class CodeGen::FunctionCodeGen
{
    // StmtCodeGen {{{
    class StmtCodeGen : public ASTNS::StmtB::Visitor, public ASTNS::VStmtIB::Visitor
    {
    public:
        StmtCodeGen(CodeGen &cg, FunctionCodeGen &fcg);

        void stmt(ASTNS::StmtB *ast);

    private:
        // STMTCG METHODS START
// The following code was autogenerated - see the utils/ directory
void visitAnotherStmt(ASTNS::AnotherStmt *ast) override;
void visitAnotherVarStmtItem(ASTNS::AnotherVarStmtItem *ast) override;
void visitExprStmt(ASTNS::ExprStmt *ast) override;
void visitRetStmt(ASTNS::RetStmt *ast) override;
void visitStmt(ASTNS::Stmt *ast) override;
void visitStmtList(ASTNS::StmtList *ast) override;
void visitStmtList_OPT(ASTNS::StmtList_OPT *ast) override;
void visitVarStmt(ASTNS::VarStmt *ast) override;
void visitVarStmtItem(ASTNS::VarStmtItem *ast) override;
void visitVarStmtItemList(ASTNS::VarStmtItemList *ast) override;
void visitVarStmtItemSegment(ASTNS::VarStmtItemSegment *ast) override;
void visitVarStmt_OPT(ASTNS::VarStmt_OPT *ast) override;
// This code was autogenerated - see the utils/ directory
        // STMTCG METHODS END

        CodeGen &cg;
        FunctionCodeGen &fcg;

    private:
        IR::Type *varty;
    };
    // }}}
    // ExprCodeGen {{{
    class ExprCodeGen : public ASTNS::ExprB::Visitor
    {
    public:
        ExprCodeGen(CodeGen &cg, FunctionCodeGen &fcg);

        IR::ASTValue expr(ASTNS::ExprB *ast);

    private:
        // EXPRCG METHODS START
// The following code was autogenerated - see the utils/ directory
void visitAdditionExpr(ASTNS::AdditionExpr *ast) override;
void visitAssignmentExpr(ASTNS::AssignmentExpr *ast) override;
void visitBinAndExpr(ASTNS::BinAndExpr *ast) override;
void visitBinOrExpr(ASTNS::BinOrExpr *ast) override;
void visitBitAndExpr(ASTNS::BitAndExpr *ast) override;
void visitBitOrExpr(ASTNS::BitOrExpr *ast) override;
void visitBitShiftExpr(ASTNS::BitShiftExpr *ast) override;
void visitBitXorExpr(ASTNS::BitXorExpr *ast) override;
void visitBlock(ASTNS::Block *ast) override;
void visitBlockedExpr(ASTNS::BlockedExpr *ast) override;
void visitBracedBlock(ASTNS::BracedBlock *ast) override;
void visitCallExpr(ASTNS::CallExpr *ast) override;
void visitCastExpr(ASTNS::CastExpr *ast) override;
void visitCompEQExpr(ASTNS::CompEQExpr *ast) override;
void visitCompLGTExpr(ASTNS::CompLGTExpr *ast) override;
void visitExpr(ASTNS::Expr *ast) override;
void visitExpr_OPT(ASTNS::Expr_OPT *ast) override;
void visitForExpr(ASTNS::ForExpr *ast) override;
void visitIfExpr(ASTNS::IfExpr *ast) override;
void visitImplRet(ASTNS::ImplRet *ast) override;
void visitImplRet_OPT(ASTNS::ImplRet_OPT *ast) override;
void visitIndentedBlock(ASTNS::IndentedBlock *ast) override;
void visitMultExpr(ASTNS::MultExpr *ast) override;
void visitNotBlockedExpr(ASTNS::NotBlockedExpr *ast) override;
void visitPrimaryExpr(ASTNS::PrimaryExpr *ast) override;
void visitUnaryExpr(ASTNS::UnaryExpr *ast) override;
// This code was autogenerated - see the utils/ directory
        // EXPRCG METHODS END

        IR::ASTValue ret;
        CodeGen &cg;
        FunctionCodeGen &fcg;
    };
    // }}}
public:
    FunctionCodeGen(CodeGen &cg, ASTNS::FunctionDecl *ast);

    bool codegen();

    struct Local
    {
        size_t scopenum;
        IR::Register *v;
        std::string name;
    };

    std::vector<Local> locals;
    size_t curScope;

    void addLocal(std::string const &name, IR::Register *val);
    Local* getLocal(std::string const &name);

    void incScope();
    void decScope();

    CodeGen &cg;
    ASTNS::FunctionDecl *ast;

    ExprCodeGen exprCG;
    StmtCodeGen stmtCG;

    IR::Function *fun;
    IR::Register *ret;
    IR::Block *curBlock;
    IR::Block *exitBlock;

    bool errored;
};

// Param and Args {{{1
// Param {{{2
class CodeGen::ParamVisitor : public ASTNS::PListB::Visitor
{
public:
    struct Param
    {
        IR::Type *ty;
        std::string name;
        ASTNS::Param *ast;
    };

    ParamVisitor(CodeGen &cg);

    std::vector<Param> ret;

private:
    // PARAMVISITOR METHODS START
// The following code was autogenerated - see the utils/ directory
void visitAnotherParam(ASTNS::AnotherParam *ast) override;
void visitParam(ASTNS::Param *ast) override;
void visitParamList(ASTNS::ParamList *ast) override;
void visitParamList_OPT(ASTNS::ParamList_OPT *ast) override;
void visitParamSegment(ASTNS::ParamSegment *ast) override;
// This code was autogenerated - see the utils/ directory
    // PARAMVISITOR METHODS END

    CodeGen &cg;
};

// Arg {{{2
class CodeGen::ArgVisitor : public ASTNS::ArgB::Visitor
{
public:
    ArgVisitor(CodeGen::FunctionCodeGen &fcg);
    std::vector<IR::ASTValue> ret;

private:
    // ARGSVISITOR METHODS START
// The following code was autogenerated - see the utils/ directory
void visitAnotherArg(ASTNS::AnotherArg *ast) override;
void visitArg(ASTNS::Arg *ast) override;
void visitArgList(ASTNS::ArgList *ast) override;
void visitArgList_OPT(ASTNS::ArgList_OPT *ast) override;
void visitArgSegment(ASTNS::ArgSegment *ast) override;
// This code was autogenerated - see the utils/ directory
    // ARGSVISITOR METHODS END

    CodeGen::FunctionCodeGen &fcg;
};
